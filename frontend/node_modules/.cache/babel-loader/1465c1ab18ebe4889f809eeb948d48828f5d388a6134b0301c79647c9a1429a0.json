{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUser\n}) => {\n  _s();\n  useEffect(() => {\n    // Load Telegram Login Widget\n    const script = document.createElement('script');\n    script.src = 'https://telegram.org/js/telegram-widget.js?7';\n    script.setAttribute('data-telegram-login', 'Krizzdrivebot'); // Replace with your bot username\n    script.setAttribute('data-size', 'large');\n    script.setAttribute('data-userpic', 'false');\n    script.setAttribute('data-onauth', 'onTelegramAuth(user)');\n    script.setAttribute('data-request-access', 'write');\n    script.async = true;\n    document.getElementById('telegram-login').appendChild(script);\n\n    // Global function for Telegram auth callback\n    window.onTelegramAuth = async userData => {\n      try {\n        const response = await axios.post('http://localhost:8000/auth/telegram', userData);\n        const {\n          user\n        } = response.data;\n        setUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (error) {\n        console.error('Authentication failed:', error);\n      }\n    };\n  }, [setUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cloud Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login with your Telegram account to access your cloud storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"telegram-login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","Login","setUser","_s","script","document","createElement","src","setAttribute","async","getElementById","appendChild","window","onTelegramAuth","userData","response","post","user","data","localStorage","setItem","JSON","stringify","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst Login = ({ setUser }) => {\n  useEffect(() => {\n    // Load Telegram Login Widget\n    const script = document.createElement('script');\n    script.src = 'https://telegram.org/js/telegram-widget.js?7';\n    script.setAttribute('data-telegram-login', 'Krizzdrivebot'); // Replace with your bot username\n    script.setAttribute('data-size', 'large');\n    script.setAttribute('data-userpic', 'false');\n    script.setAttribute('data-onauth', 'onTelegramAuth(user)');\n    script.setAttribute('data-request-access', 'write');\n    script.async = true;\n\n    document.getElementById('telegram-login').appendChild(script);\n\n    // Global function for Telegram auth callback\n    window.onTelegramAuth = async (userData) => {\n      try {\n        const response = await axios.post('http://localhost:8000/auth/telegram', userData);\n        const { user } = response.data;\n        setUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (error) {\n        console.error('Authentication failed:', error);\n      }\n    };\n  }, [setUser]);\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h1>Cloud Box</h1>\n        <p>Login with your Telegram account to access your cloud storage</p>\n        <div id=\"telegram-login\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7BN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,8CAA8C;IAC3DH,MAAM,CAACI,YAAY,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC,CAAC;IAC7DJ,MAAM,CAACI,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC;IACzCJ,MAAM,CAACI,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC;IAC5CJ,MAAM,CAACI,YAAY,CAAC,aAAa,EAAE,sBAAsB,CAAC;IAC1DJ,MAAM,CAACI,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC;IACnDJ,MAAM,CAACK,KAAK,GAAG,IAAI;IAEnBJ,QAAQ,CAACK,cAAc,CAAC,gBAAgB,CAAC,CAACC,WAAW,CAACP,MAAM,CAAC;;IAE7D;IACAQ,MAAM,CAACC,cAAc,GAAG,MAAOC,QAAQ,IAAK;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,qCAAqC,EAAEF,QAAQ,CAAC;QAClF,MAAM;UAAEG;QAAK,CAAC,GAAGF,QAAQ,CAACG,IAAI;QAC9BhB,OAAO,CAACe,IAAI,CAAC;QACbE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;MACpD,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;EACH,CAAC,EAAE,CAACrB,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B1B,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB1B,OAAA;QAAA0B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB9B,OAAA;QAAA0B,QAAA,EAAG;MAA6D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpE9B,OAAA;QAAK+B,EAAE,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApCIF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}