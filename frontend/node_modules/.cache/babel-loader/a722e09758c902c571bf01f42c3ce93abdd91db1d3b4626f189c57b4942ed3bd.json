{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport FolderGrid from './FolderGrid';\nimport StatsBar from './StatsBar';\nimport UploadModal from './UploadModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  setUser\n}) => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [stats, setStats] = useState({});\n  const [currentView, setCurrentView] = useState('home');\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  useEffect(() => {\n    fetchFolders();\n    fetchFiles();\n    fetchStats();\n  }, [user]);\n  const fetchFolders = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/folders/${user.id}`);\n      setFolders(response.data);\n    } catch (error) {\n      console.error('Error fetching folders:', error);\n    }\n  };\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/files/${user.id}`);\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/stats/${user.id}`);\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n  const createFolder = async name => {\n    try {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('user_id', user.id);\n      await axios.post('http://localhost:8000/folders/create', formData);\n      fetchFolders();\n    } catch (error) {\n      console.error('Error creating folder:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      currentView: currentView,\n      setCurrentView: setCurrentView,\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onCreateFolder: () => setShowUploadModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FolderGrid, {\n        folders: folders,\n        files: files,\n        currentView: currentView,\n        selectedFolder: selectedFolder,\n        setSelectedFolder: setSelectedFolder,\n        onCreateFolder: createFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsBar, {\n        stats: stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(UploadModal, {\n      user: user,\n      folders: folders,\n      onClose: () => setShowUploadModal(false),\n      onUploadComplete: () => {\n        fetchFiles();\n        fetchStats();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6BSMmItJCD3mDAejtgkJac8kZdU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","Header","FolderGrid","StatsBar","UploadModal","jsxDEV","_jsxDEV","Dashboard","user","setUser","_s","folders","setFolders","files","setFiles","stats","setStats","currentView","setCurrentView","selectedFolder","setSelectedFolder","showUploadModal","setShowUploadModal","fetchFolders","fetchFiles","fetchStats","response","get","id","data","error","console","createFolder","name","formData","FormData","append","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateFolder","onClose","onUploadComplete","_c","$RefreshReg$"],"sources":["/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport FolderGrid from './FolderGrid';\nimport StatsBar from './StatsBar';\nimport UploadModal from './UploadModal';\n\nconst Dashboard = ({ user, setUser }) => {\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [stats, setStats] = useState({});\n  const [currentView, setCurrentView] = useState('home');\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n\n  useEffect(() => {\n    fetchFolders();\n    fetchFiles();\n    fetchStats();\n  }, [user]);\n\n  const fetchFolders = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/folders/${user.id}`);\n      setFolders(response.data);\n    } catch (error) {\n      console.error('Error fetching folders:', error);\n    }\n  };\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/files/${user.id}`);\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/stats/${user.id}`);\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n\n  const createFolder = async (name) => {\n    try {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('user_id', user.id);\n      \n      await axios.post('http://localhost:8000/folders/create', formData);\n      fetchFolders();\n    } catch (error) {\n      console.error('Error creating folder:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Sidebar \n        currentView={currentView} \n        setCurrentView={setCurrentView}\n        user={user}\n        setUser={setUser}\n      />\n      <div className=\"main-content\">\n        <Header \n          user={user}\n          onCreateFolder={() => setShowUploadModal(true)}\n        />\n        <FolderGrid \n          folders={folders}\n          files={files}\n          currentView={currentView}\n          selectedFolder={selectedFolder}\n          setSelectedFolder={setSelectedFolder}\n          onCreateFolder={createFolder}\n        />\n        <StatsBar stats={stats} />\n      </div>\n      {showUploadModal && (\n        <UploadModal \n          user={user}\n          folders={folders}\n          onClose={() => setShowUploadModal(false)}\n          onUploadComplete={() => {\n            fetchFiles();\n            fetchStats();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}