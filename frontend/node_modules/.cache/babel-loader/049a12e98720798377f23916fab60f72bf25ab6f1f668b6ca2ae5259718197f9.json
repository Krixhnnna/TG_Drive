{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/UploadModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { CloudUpload, Close } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadModal = ({\n  user,\n  folders,\n  onClose,\n  onUploadComplete\n}) => {\n  _s();\n  var _folders$;\n  const [selectedFolder, setSelectedFolder] = useState(((_folders$ = folders[0]) === null || _folders$ === void 0 ? void 0 : _folders$.id) || '');\n  const [uploading, setUploading] = useState(false);\n  const onDrop = async acceptedFiles => {\n    if (!selectedFolder) {\n      alert('Please select a folder');\n      return;\n    }\n    setUploading(true);\n    for (const file of acceptedFiles) {\n      const formData = new FormData();\n      formData.append('user_id', user.id);\n      formData.append('folder_id', selectedFolder);\n      formData.append('file', file);\n      try {\n        await axios.post('http://localhost:8000/upload', formData);\n      } catch (error) {\n        console.error('Upload failed:', error);\n      }\n    }\n    setUploading(false);\n    onUploadComplete();\n    onClose();\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Close, {\n          className: \"close-icon\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedFolder,\n          onChange: e => setSelectedFolder(e.target.value),\n          children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: folder.id,\n            children: folder.name\n          }, folder.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n          className: \"upload-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drop the files here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & drop files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploading files...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadModal, \"pqfZNOkFU6SBGf/IP4scwV19BGg=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadModal;\nexport default UploadModal;\nvar _c;\n$RefreshReg$(_c, \"UploadModal\");","map":{"version":3,"names":["React","useState","useDropzone","axios","CloudUpload","Close","jsxDEV","_jsxDEV","UploadModal","user","folders","onClose","onUploadComplete","_s","_folders$","selectedFolder","setSelectedFolder","id","uploading","setUploading","onDrop","acceptedFiles","alert","file","formData","FormData","append","post","error","console","getRootProps","getInputProps","isDragActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","folder","name","_c","$RefreshReg$"],"sources":["/Users/krishnapandey/Desktop/code/TG_Drive/frontend/src/components/UploadModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { CloudUpload, Close } from '@mui/icons-material';\n\nconst UploadModal = ({ user, folders, onClose, onUploadComplete }) => {\n  const [selectedFolder, setSelectedFolder] = useState(folders[0]?.id || '');\n  const [uploading, setUploading] = useState(false);\n\n  const onDrop = async (acceptedFiles) => {\n    if (!selectedFolder) {\n      alert('Please select a folder');\n      return;\n    }\n\n    setUploading(true);\n    \n    for (const file of acceptedFiles) {\n      const formData = new FormData();\n      formData.append('user_id', user.id);\n      formData.append('folder_id', selectedFolder);\n      formData.append('file', file);\n\n      try {\n        await axios.post('http://localhost:8000/upload', formData);\n      } catch (error) {\n        console.error('Upload failed:', error);\n      }\n    }\n\n    setUploading(false);\n    onUploadComplete();\n    onClose();\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div className=\"upload-modal-overlay\">\n      <div className=\"upload-modal\">\n        <div className=\"upload-modal-header\">\n          <h3>Upload Files</h3>\n          <Close className=\"close-icon\" onClick={onClose} />\n        </div>\n\n        <div className=\"folder-select\">\n          <label>Select Folder:</label>\n          <select \n            value={selectedFolder} \n            onChange={(e) => setSelectedFolder(e.target.value)}\n          >\n            {folders.map(folder => (\n              <option key={folder.id} value={folder.id}>\n                {folder.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n          <input {...getInputProps()} />\n          <CloudUpload className=\"upload-icon\" />\n          {isDragActive ? (\n            <p>Drop the files here...</p>\n          ) : (\n            <p>Drag & drop files here, or click to select files</p>\n          )}\n        </div>\n\n        {uploading && (\n          <div className=\"upload-progress\">\n            <p>Uploading files...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UploadModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}